%implements s0_b0_ekbuc_InitializeConditions "C"

%function InitializeConditions(block, system) Output
%assign localVarDecl = ""
%openfile localVarDecl
int32_T i;
%closefile localVarDecl
%assign tlcInitializeConditionsFcnOfS0B0 = OpaqueTLCBlockFcn("InitializeConditions", 0, 0, 0, 1)
%<SLibInsertAsyncTaskInitializeCode(system)>
%<SLibWriteMachineInitialize()>
%<tlcInitializeConditionsFcnOfS0B0>\
/* InitializeConditions for DiscreteFir: '<Root>/Discrete FIR Filter' */
samplingcircuit_DW.DiscreteFIRFilter_states = samplingcircuit_P.DiscreteFIRFilter_InitialStates;
/* InitializeConditions for DiscreteFir: '<Root>/Discrete FIR Filter1' */
samplingcircuit_DW.DiscreteFIRFilter1_states = samplingcircuit_P.DiscreteFIRFilter1_InitialState;
/* InitializeConditions for DiscreteFir: '<Root>/Discrete FIR Filter2' */
samplingcircuit_DW.DiscreteFIRFilter2_states = samplingcircuit_P.DiscreteFIRFilter2_InitialState;
/* InitializeConditions for DiscreteFir: '<Root>/Discrete FIR Filter3' */
samplingcircuit_DW.DiscreteFIRFilter3_states = samplingcircuit_P.DiscreteFIRFilter3_InitialState;
for (i = 0; i < 10; i++) {
    /* InitializeConditions for DiscreteFir: '<Root>/Filter' */
    samplingcircuit_DW.Filter_states[i] = samplingcircuit_P.Filter_InitialStates;
    /* InitializeConditions for DiscreteFir: '<Root>/Filter1' */
    samplingcircuit_DW.Filter1_states[i] = samplingcircuit_P.Filter1_InitialStates;
    /* InitializeConditions for DiscreteFir: '<Root>/Filter2' */
    samplingcircuit_DW.Filter2_states[i] = samplingcircuit_P.Filter2_InitialStates;
    /* InitializeConditions for DiscreteFir: '<Root>/Filter3' */
    samplingcircuit_DW.Filter3_states[i] = samplingcircuit_P.Filter3_InitialStates;
    /* InitializeConditions for DiscreteFir: '<S3>/Digital Filter' */
    samplingcircuit_DW.DigitalFilter_states[i] = samplingcircuit_P.DigitalFilter_InitialStates;
}
/* InitializeConditions for DiscreteFir: '<Root>/Discrete FIR Filter4' */
samplingcircuit_DW.DiscreteFIRFilter4_circBuf = 0;
for (i = 0; i < 15; i++) {
    samplingcircuit_DW.DiscreteFIRFilter4_states[i] = samplingcircuit_P.DiscreteFIRFilter4_InitialState;
}
/* End of InitializeConditions for DiscreteFir: '<Root>/Discrete FIR Filter4' */

/* InitializeConditions for S-Function (sdspdsamp2): '<Root>/Downsample' */
samplingcircuit_DW.Downsample_Count = 0;
samplingcircuit_DW.Downsample_Buffer = 0.0;
%assign fcnProtoType = ""
%openfile fcnProtoType
static void InitializeConditions(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 1, fcnProtoType)>
%<LibSetSystemField(system, "CachedInitializeLocalVars", localVarDecl)>
%endfunction
